(rules (ruleSpec (parserRuleSpec prog : (ruleBlock (ruleAltList (labeledAlt (alternative (element (ebnf (block ( (altList (alternative (element (atom (ruleref line))))) )) (blockSuffix (ebnfSuffix +)))) (element (atom (terminalDef EOF))))))) ; exceptionGroup)) (ruleSpec (parserRuleSpec line : (ruleBlock (ruleAltList (labeledAlt (alternative (element (atom (ruleref label)) (ebnfSuffix ?)) (element (ebnf (block ( (altList (alternative (element (atom (ruleref instruction)))) | (alternative (element (atom (ruleref macro)))) | (alternative (element (atom (ruleref operation))))) )))) (element (atom (terminalDef EOL))))))) ; exceptionGroup)) (ruleSpec (parserRuleSpec instruction : (ruleBlock (ruleAltList (labeledAlt (alternative (element (atom (terminalDef INSTRUCTION))) (element (atom (ruleref parms)) (ebnfSuffix *)))))) ; exceptionGroup)) (ruleSpec (parserRuleSpec macro : (ruleBlock (ruleAltList (labeledAlt (alternative (element (atom (terminalDef MACRO))) (element (atom (ruleref moperands)) (ebnfSuffix *)))))) ; exceptionGroup)) (ruleSpec (parserRuleSpec operation : (ruleBlock (ruleAltList (labeledAlt (alternative (element (atom (terminalDef OPCODE))) (element (atom (ruleref ooperands)) (ebnfSuffix *)))))) ; exceptionGroup)) (ruleSpec (parserRuleSpec parms : (ruleBlock (ruleAltList (labeledAlt (alternative (element (atom (terminalDef PARMS))) (element (ebnf (block ( (altList (alternative (element (atom (terminalDef COMMA))) (element (atom (terminalDef PARMS))))) )) (blockSuffix (ebnfSuffix *)))))) | (labeledAlt (alternative (element (atom (terminalDef ASTER))) (element (ebnf (block ( (altList (alternative (element (atom (terminalDef COMMA))) (element (atom (ruleref register))))) )) (blockSuffix (ebnfSuffix *)))))) | (labeledAlt (alternative (element (atom (terminalDef LABEL))))))) ; exceptionGroup)) (ruleSpec (parserRuleSpec moperands : (ruleBlock (ruleAltList (labeledAlt (alternative (element (atom (terminalDef LBRACKET))) (element (atom (ruleref register))) (element (ebnf (block ( (altList (alternative (element (atom (terminalDef COMMA))) (element (atom (ruleref register))))) )) (blockSuffix (ebnfSuffix *)))) (element (atom (terminalDef RBRACKET))) (element (ebnf (block ( (altList (alternative (element (atom (terminalDef COMMA))) (element (atom (terminalDef MPARM))) (element (atom (terminalDef EQUALS))) (element (ebnf (block ( (altList (alternative (element (ebnf (block ( (altList (alternative (element (atom (terminalDef NUM))))) )) (blockSuffix (ebnfSuffix +))))) | (alternative (element (atom (ruleref register))))) )))))) )) (blockSuffix (ebnfSuffix *)))))) | (labeledAlt (alternative (element (atom (terminalDef MPARM))) (element (atom (terminalDef EQUALS))) (element (atom (terminalDef LBRACKET))) (element (atom (ruleref register))) (element (atom (terminalDef RBRACKET))) (element (ebnf (block ( (altList (alternative (element (atom (terminalDef COMMA))) (element (atom (terminalDef MPARM))) (element (atom (terminalDef EQUALS))) (element (atom (terminalDef LBRACKET))) (element (atom (ruleref register))) (element (ebnf (block ( (altList (alternative (element (atom (terminalDef COMMA))) (element (atom (ruleref register))))) )) (blockSuffix (ebnfSuffix *)))) (element (atom (terminalDef RBRACKET))))) )) (blockSuffix (ebnfSuffix *)))))))) ; exceptionGroup)) (ruleSpec (parserRuleSpec ooperands : (ruleBlock (ruleAltList (labeledAlt (alternative (element (atom (ruleref register))) (element (ebnf (block ( (altList (alternative (element (atom (terminalDef COMMA))) (element (ebnf (block ( (altList (alternative (element (atom (ruleref register))) (element (atom (terminalDef DISPLACEMENT)) (ebnfSuffix ?))) | (alternative (element (atom (ruleref label))) (element (atom (terminalDef DISPLACEMENT)) (ebnfSuffix ?)))) )))))) )) (blockSuffix (ebnfSuffix *)))))) | (labeledAlt (alternative (element (atom (terminalDef STORAGE))))) | (labeledAlt (alternative (element (atom (terminalDef CLENGTH))) (element (atom (terminalDef STRING)) (ebnfSuffix ?)))) | (labeledAlt (alternative (element (atom (terminalDef DYNCLENTH))) (element (atom (terminalDef STRING)) (ebnfSuffix ?)))))) ; exceptionGroup)) (ruleSpec (parserRuleSpec register : (ruleBlock (ruleAltList (labeledAlt (alternative (element (atom (terminalDef REGISTER))))) | (labeledAlt (alternative (element (atom (terminalDef EQUREGISTER))))))) ; exceptionGroup)) (ruleSpec (parserRuleSpec label : (ruleBlock (ruleAltList (labeledAlt (alternative (element (atom (terminalDef LABEL))))))) ; exceptionGroup)))